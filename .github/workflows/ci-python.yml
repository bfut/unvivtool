name: ci-python

on:
  push:
    branches:
  pull_request:
    branches:

jobs:

  python:
    runs-on: ${{ matrix.os }}
#    needs:
#      - ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        python-version: [ '3.8', '3.9', '3.10' ] # 'pypy-3.8'

    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Python version
      run: python -c "import sys; print(sys.version)"

    # - name: Add requirements
    #   run: |
    #     python -m pip install --upgrade pip setuptools wheel

    - name: "pip install"
      run: |
        python -m pip install --verbose ./python

    - name: "Print unvivtool.__version__, help"
      shell: bash
      run: |
        echo "import unvivtool; print(f'unvivtool.__version__={unvivtool.__version__}')" > _version.py; cat _version.py
        python -c "import subprocess; import sys; ret = subprocess.run([ sys.executable, '_version.py' ]); print('Exit code', ret.returncode); sys.exit(0)"
        python -c "import unvivtool; help(unvivtool)"

    - name: "pytest"
      shell: bash
      run: |
        python -m pip install -q pytest
        cmp --help
        cksum
        pytest -s -vv ./tests/test_smoketest.py
        pytest -s -vv ./tests/test_decodeencode.py
