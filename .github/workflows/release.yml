name: release

on:
  workflow_dispatch:

env:
  version: 117
  dotversion: 1.17
  SRC: unvivtool.c
  DEST: unvivtool
  BRANCHES: -DUVTVUTF8

jobs:
  win32:
    runs-on: ubuntu-latest  # required for -fstack-clash-protection

    name: Compile (Windows x86)
    steps:
      - uses: actions/checkout@v3

      - name: Install compiler
        run: |
          sudo apt install gcc-mingw-w64-i686

      - name: Build
        run: |
          MINGWFLAGS='-std=c89 -fPIE -s -O2 -Xlinker --no-insert-timestamp'
          # MINGWFLAGS='-std=c89 -fPIE -fstack-clash-protection -s -O2 -Xlinker --no-insert-timestamp'

          echo "mingw-win32"
          i686-w64-mingw32-gcc-win32 $MINGWFLAGS "${{ env.SRC }}" -o "${{ env.DEST }}.exe" ${{ env.BRANCHES }}

          sha256sum "${{ env.DEST }}.exe"
          md5sum "${{ env.DEST }}.exe"

      - name: Create archive
        run: |
          7z a -tzip "${{ env.DEST }}${{ env.version }}_cli_win32.zip" \
          scripts/batch-decode_archives_to_folders.sh \
          scripts/batch-encode_folders_to_archives.sh \
          scripts/batch-encode_folder_to_archive.sh \
          doc/unvivtool_cli.md \
          include/dfa.h \
          references \
          libnfsviv.h \
          LICENSE \
          README.md \
          ${{ env.DEST }}.exe \
          unvivtool.c

      - name: Store archive
        uses: actions/upload-artifact@v3
        with:
          name: "${{ env.DEST }}${{ env.version }}_cli_win32.zip"
          path: "${{ env.DEST }}${{ env.version }}_cli_win32.zip"
          retention-days: 1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.dotversion }}
          release_name: "${{ env.DEST }}${{ env.version }}_cli_win32.zip"
          draft: false
          prerelease: false

      - name: Test
        run: cat "${{ env.DEST }}${{ env.version }}_cli_win32.zip"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DEST }}${{ env.version }}_cli_win32.zip
          asset_name: ${{ env.DEST }}${{ env.version }}_cli_win32.zip
          asset_content_type: application/zip
